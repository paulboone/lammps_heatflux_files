#################################################################################################
# to restart, use -var restart <stage> <restart_filename>
# stages:
# - 0: start at beginning
# - 1: start after NVT equilibration
# - 2: start after NVE equilibration

variable restart index 0 'nothing'
variable        restartAtStep equal ${restart}
next restart
variable        restartFileName string ${restart}
print "Restart at step: ${restartAtStep} "
print "Restart filename: ${restartFileName} "


variable        initialDataFile string propane.data
variable        simTemp equal 258.93

variable quenchTemp equal ${simTemp} # change if want to quench

units           real
atom_style      full
dimension       3
boundary        p p p

neighbor        2 bin  # default
neigh_modify    every 1 delay 3 check yes

if "${restartAtStep} > 0" then &
    "read_restart    ${restartFileName}" &
    "jump SELF after_load_data"

label load_data
read_data       ${initialDataFile}
velocity        all create ${simTemp} 123123 dist uniform

label after_load_data



timestep        1.0

#################################################################################################
### use NERD force field
# Nath, S. K., Escobedo, F. A. & de Pablo, J. J. On the simulation of vapor–liquid equilibria for alkanes. The Journal of Chemical Physics 108, 9905–9911 (1998).
pair_style      lj/cut 13.8
pair_modify     mix geometric tail yes
bond_style      harmonic
angle_style     harmonic
dihedral_style  opls # not needed for propane

# see spreadsheet h1-lammps-config-units.xlsx for sources and calculations for the coefficients
pair_coeff      1 1 0.0910 3.930 #CH2
pair_coeff      2 2 0.2039 3.857 #CH3

bond_coeff      1 95.883 1.54

angle_coeff     1 62.100 114
# angle_coeff     2 62.100 114

special_bonds   lj 0.0 0.0 0.0

#################################################################################################
### divide up box / setup measurement chunks


variable  bx1 equal   0.00
variable  bx2 equal  19.38
variable  by1 equal   0.00
variable  by2 equal  19.38
variable  bz1 equal   0.00
variable  bz2 equal 129.22
variable  zL equal (v_bz2-v_bz1)/20

region  sink_l block ${bx1} ${bx2} ${by1} ${by2} ${bz1} $(v_bz1 + v_zL) units box
region  cv_l   block ${bx1} ${bx2} ${by1} ${by2} $(v_bz1 + 2*v_zL) $(v_bz1 + 8*v_zL) units box
region  source block ${bx1} ${bx2} ${by1} ${by2} $(v_bz1 + 9*v_zL) $(v_bz1 + 11*v_zL) units box
region  cv_r   block ${bx1} ${bx2} ${by1} ${by2} $(v_bz1 + 12*v_zL) $(v_bz1 + 18*v_zL) units box
region  sink_r block ${bx1} ${bx2} ${by1} ${by2} $(v_bz1 + 19*v_zL) ${bz2} units box

group gcvl dynamic all region cv_l every 1
group gcvr dynamic all region cv_r every 1

variable chunk_size equal ${zL}/2
# compute dchunks all chunk/atom bin/1d z lower ${chunk_size}
# fix dchunk_avgs  all ave/chunk 100  100  10000 dchunks density/mass file density100_10K.out

compute tchunks all chunk/atom bin/1d z lower ${chunk_size}
fix tchunk_avgs  all ave/chunk 10  1000  10000 tchunks temp file temps10_10K.out

# output for calculating angle importance
compute PE_TOT_PAIR all pair lj/cut
compute PE_TOT_BOND all pe bond
compute PE_TOT_ANGLE all pe angle
compute PE_TOT_DIHEDRAL all pe dihedral
compute PE_TOT_IMPROPER all pe improper
compute PE_TOT_ALL all pe
compute KE_TOT all ke
fix  PE10 all ave/time 1  10000  10000 c_PE_TOT_PAIR c_PE_TOT_BOND c_PE_TOT_ANGLE c_PE_TOT_DIHEDRAL c_PE_TOT_IMPROPER c_PE_TOT_ALL c_KE_TOT file energy10K.out

# per timestep output for calculating angle importance via fluctuations
fix  PE1 all ave/time 1  1  1 c_PE_TOT_PAIR c_PE_TOT_BOND c_PE_TOT_ANGLE c_PE_TOT_DIHEDRAL c_PE_TOT_IMPROPER c_PE_TOT_ALL c_KE_TOT file energy1.out

#################################################################################################
### NVT equilibration
if "${restartAtStep} > 0" then "jump SELF after_NVT_eq"
print "** NVT EQUILIBRATION ** "
thermo_style custom step vol temp press density etotal
thermo         10000
thermo_modify  flush yes
restart        1000000 nvt-eq.*.restart
dump dump1 all xyz 1000000 nvt-eq.dump.*.xyz

fix           NVT_eq all nvt temp ${simTemp} ${simTemp} 50
run           2000000
unfix         NVT_eq
undump dump1


label after_NVT_eq
#################################################################################################
### heat flux computes and outputs

compute PE         all pe/atom
compute KE         all ke/atom
compute STRESS_p   all stress/atom NULL pair
compute STRESS_b   all stress/atom NULL bond
compute STRESS_a   all stress/atom NULL angle
# compute STRESS_d   all stress/atom NULL dihedral
# compute STRESS_i   all stress/atom NULL improper

compute J_cvl_p    gcvl heat/flux KE PE STRESS_p
compute J_cvl_b    gcvl heat/flux KE PE STRESS_b
compute J_cvl_a    gcvl heat/flux KE PE STRESS_a
# compute J_cvl_d    gcvl heat/flux KE PE STRESS_d
# compute J_cvl_i    gcvl heat/flux KE PE STRESS_i
compute J_cvl_ai   gcvl heat/flux_improved_atom angle
# compute J_cvl_di   gcvl heat/flux_improved_atom dihedral
# compute J_cvl_ii    gcvl heat/flux_improved_atom improper
variable ii_placeholder equal 0.0

compute J_cvr_p    gcvr heat/flux KE PE STRESS_p
compute J_cvr_b    gcvr heat/flux KE PE STRESS_b
compute J_cvr_a    gcvr heat/flux KE PE STRESS_a
# compute J_cvr_d    gcvr heat/flux KE PE STRESS_d
# compute J_cvr_i    gcvr heat/flux KE PE STRESS_i
compute J_cvr_ai   gcvr heat/flux_improved_atom angle
# compute J_cvr_di   gcvr heat/flux_improved_atom dihedral
# compute J_cvr_ii    gcvr heat/flux_improved_atom improper

variable J_cvl equal (c_J_cvl_p[3]+c_J_cvl_b[3]+c_J_cvl_ai[3])#+c_J_cvl_di[3]) #+c_J_cvl_ii[3]
variable J_cvr equal (c_J_cvr_p[3]+c_J_cvr_b[3]+c_J_cvr_ai[3])#+c_J_cvr_di[3]) #+c_J_cvr_ii[3]

fix  J1_10 all ave/time 1  10000  10000 &
    c_J_cvl_p[6] c_J_cvl_p[3] c_J_cvl_b[3] c_J_cvl_a[3] v_ii_placeholder v_ii_placeholder &
    c_J_cvl_ai[3] v_ii_placeholder v_ii_placeholder &
    c_J_cvr_p[6] c_J_cvr_p[3] c_J_cvr_b[3] c_J_cvr_a[3] v_ii_placeholder v_ii_placeholder &
    c_J_cvr_ai[3] v_ii_placeholder v_ii_placeholder &
    file J1_10K.out


#################################################################################################
### NVE equilibration

if "${restartAtStep} > 1" then "jump SELF after_NVE_eq"
print "** NVE EQUILIBRATION ** "
thermo_style custom step vol temp press density etotal v_J_cvl v_J_cvr
thermo         10000
thermo_modify  flush yes
restart        1000000 nve-eq.*.restart
dump dump2 all xyz 1000000 nve-eq.dump.*.xyz

fix           NVE_eq all nve
run           3000000
unfix         NVE_eq
undump dump2
label after_NVE_eq

#################################################################################################
### NVE

print "** NVE RUN ** "
variable cvl_xsection equal (v_bx2-v_bx1)*(v_by2-v_by1)
variable cvl_volume equal v_cvl_xsection*6*v_zL

variable e_applied equal 0.0009393
variable J_expected equal v_e_applied/v_cvl_xsection

fix source all heat 1 $(2*v_e_applied) region source
fix sinkl all heat 1 $(-v_e_applied) region sink_l
fix sinkr all heat 1 $(-v_e_applied) region sink_r

fix heatfluxtest all nve

thermo_style custom step vol temp press density etotal v_J_cvl v_J_cvr
thermo         10000
thermo_modify flush yes
restart        1000000 nve.*.restart
dump dump3 all xyz 1000000 nve.dump.*.xyz
run           20000000 upto
